1. Serwer zapewnia tu usługi dla klientow, zgłaszających do niego żądania obsługi. Komunikacja nastepuje poprzez nawiazanie polaczenia klienta z serwerem, nastepnie wysłania żądania do serwera w określonym formacie i oczekiwanie na odpowiedź. Serwer cały czas oczekuje na klientow. W momencie otrzymania żądania przetwarza je i wysyła odpowiedź.
2. Ustalają/ informują w jaki sposób ma zostać wyświetlona przez przeglądarkę internetową zawartość wybranego elementu HTML lub XML. Umożliwiają nadanie specjalnych właściwości dowolnym znacznikom HTML w dokumencie oraz tworzenie klas z właściwościami. Kaskadowość stylów określa pierwszeństwo oddziaływania na te same elementy strony stylów z  różnych źródeł.
3.Wykorzystywany najczęściej w tworzeniu dynamicznych stron internetowych. Zapewnia interaktywność stron oraz między innymi obsługę zdarzeń, walidację formularzy. JS wykorzystywany takze do tworzenia gier przeglądarkowych ( Framework Phaser), do budowania aplikacji (Angular, React), ale takze do backendu dzięki Node.js
4. Jedna z najpopularniejszych bibliotek JavaScript. Jest szybka, mała i bogata w funkcje. Pozwala zastosować na stronie proste efekty wizualne jak i funkcjonalne rozwiązania np: responsywny slider, lista rozwijana.
5.Model-View-Controller to wzorzec którego założeniem jest podzielenie kodu aplikacji na Model reprezentujący dane, widok reprezentujacy interfejs użytkownika oraz kontroler czyli logikę sterującą aplikacją.
6.Model zapewnia zunifikowany sposób dostępu do danych. Najczęściej stosowany jest do pobierania i przygotowania rekordów z bazy danych. Dzięki temu reszta aplikacji staje się niezależna od tego skąd i w jaki sposób pobierane są dane.|||| Z czego się składa, co w nim umieszczamy? ||||
7.Kontroler jest podstawową jednostką logiczną naszego programu. Odpowiada m.in. za przetwarzanie danych pobranych za pomocą modelu i przekazanie ich użytkownikowi oraz zapisanie danych przez niego podanych (poprzez widok). W kontrolerze odbywają się wszystkie konieczne obliczenia i podejmowane są odpowiednie akcje w zależności od działań użytkownika. |||| Z czego się składa, co w nim umieszczamy? ||||
8.Widok reprezentuje to co widzi użytkownik. Widok oddzielony od logiki pozwala na bezinwazyjną zmianę grafiki w dowolnym momencie.
9. Razor to składnia znaczników umożliwiająca osadzanie kodu opartego na platformie . NET na stronach internetowych. Platforma Razor Pages jest preferowanym sposobem tworzenia aplikacji opartych na stronach lub formularzach w ASP.NET Core.
10. NIE WIEM CO TO SĄ adnotacje do danych w modelu.
11.Sterowanie dostępem do akcji, odbywa się poprzez autoryzację konkretnych ról bądź użytkowników, do wyświetlania uprzednio zdefiniowanych widoków.Istotne jest dodanie atrybutu [Authorize] przed klasą kontrolera. Autoryzację przydzielamy konkretnym osobom bądź rolom poprzez atrybuty jak: [AllowAnonymous] public IActionResult TylkoAnon(){ return View();} [Authorize(Roles="Admini,Kierownictwo")] public IActionResult TylkoWazni(){ return View();} 
12.Umożliwienie użytkownikowi wprowadzenia kodu skryptowego, który będzie bez zmian przesłany do przeglądarki innego użytkownika. Jedną z możliwości zabezpieczenia się jest enkodowanie HTML całej zawartości.
13.Wykonanie kodu z uprawnieniami innego internauty.Atak polegajacy na zmuszeniu przeglądarki ofiary do wykonania pewnej nieautoryzowanej akcji (wykonania requestu HTTP). Zabezpieczenia na tego typu ataki stosuje sie poprzez generowanie page-tokenów bądź per-session tokenów antiCSRF i sprawdzanie ich poprawnosci poprzez strone obslugujaca formularz. Formą zabezpieczeń jest zakaz dostępu do cookies z poziomu js.
14.Wykradnięcie ciasteczek pozwala na próbe podszycia się pod legalnego użytkownika, któremu pierwotnie wydano plik cookie, i uzyskać dostęp do usług internetowych bez wyzwania logowania. Ciasteczka mogą także przechowywać preferencje które uznawane mogą być za dane wrażliwe.
15. Najczęsciej występuje przy pytaniu uzytkownika o wprowadzanie danych jak nickname/userId a przekazane jest polecenie SQL które nieświadomie jest uruchamiane w naszej bazie danych.
16. Widok layout definiuje najwyższego poziomu wzór dla widoków aplikacji. Wszystkie typowe struktury HTML jak skrypty i style które są powtarzalne w wielu stronach moga być zdefiniowane w pliku Layout do którego będą się odwoływać  dowolne widoki w aplikacji. Layout redukuje ilość kodu który by się powtarzał.
17. Selektory: * - selektor uniwersalny (kazdy element na stronie)|| #x - hash sign (elementy o id "x")|| .x - selektor klasy, nadaje styl grupie elementow|| x - selektor typu (np a { color:red;} )|| X[title] selektor atrybutu wybierze tylko element z atrybutem title
18.Code First - podejście projektowe, w którym zaczynamy pracę od napisania kodu a nie oparcia aplikacji na istniejącej już bazie danych|| Database first - Korzystając z mechanizmu inżynierii wstecznej tworzymy klasy encji i kontekstu na podstawie istniejącego schematu bazy danych.
19. Programista nie zawraca sobię głowy tym co się dzieje w tle. Spora ilość operacji jest wykonywana bez naszej ingerencji. ORM oferuje możliwość pracy z bazą danych nawet gdy programista nie jest wyspecjalizowany przy pracy z SQL. Bardzo dobrze współpracuje z CRUD. Sprawia że kod jest łatwiejszy do utrzymania i aktualizacji.  Zwiększa odporność na ataki SQL injection.
20. MS entity framwork pozwala na: Wykonywanie podstawowych operacji CRUD.Łatwe zarządzanie relacjami 1-1, 1-∞ oraz ∞-∞. Tworzenie relacji dziedziczenia pomiędzy encjami. || Umożliwia deweloperom pracę z danymi w postaci obiektów i właściwości specyficznych dla domeny, takich jak klienci i adresy klientów, bez konieczności samodzielnej pracy z bazowymi tabelami i kolumnami bazy danych -- (to takie bardzo wikipediowe)
21.